
.auth{
    display: flex;
    flex-direction: column;
    margin: 0 auto;
    min-height: 30rem;
}

.auth__title{
    padding: 0;
    font-size: 1.5rem;
    font-weight: 900;
    line-height: 1.816rem;
    width: calc(100% - 2.75rem);
    max-width: 22.375rem;
    margin: 0 auto 1.73rem;
    text-align: center;
}

@media screen and (max-width: 620px){
    .auth__title{
        font-size: 1.125rem;
        line-height: 1.361rem;
        margin-bottom: 2rem;
        margin-top: 1.563rem;
    }
}

.form-auth{
    display: flex;
    flex-direction: column;
    width: calc(100% - 2.75rem);
    max-width: 22.375rem;
    margin: 0 auto;
    min-height: 21.875rem;
}

@media screen and (max-width: 620px){
    .form{
        margin-bottom: 1rem;
    }
}

.form-auth__input{
    display: flex;
    font-size: 0.875rem;
    font-weight: 400;
    line-height: 1.059rem;
    width: 100%;
    padding-bottom: 10px;
    margin-bottom: 1.875rem;
    border:none;
    border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    background-color: transparent;
}

.form-auth__input-error_active{
    margin: 0;
    font-size: 0.75rem;
    font-weight: 400;
    line-height: 0.781rem;
    min-height: 1.562rem;
}

.form__text{
    margin: 0 0 1.5rem 0.7rem;
    font-size: 0.9rem;
}

.form-auth__input_type_error{
    border-bottom: #FF0000 1px solid;
    margin-bottom: 0.313rem;
}

.auth__switch-image{
    width: 3rem;
    margin-right: 0.3rem;
}

.auth__password-section{
    display: flex;
    margin: 1rem auto 0;
    max-width: 12rem;
    cursor: pointer;
}

.auth__admit-button{
    display: flex;
    justify-content: center;
    align-items: center;
    border: none;
    font-size: 1.125rem;
    font-weight: 400;
    line-height: 1.361rem;
    color: #FFFFFF;
    background-color: #000000;
    width: 100%;
    max-width: 22.375rem;
    height: 3.125rem;
    border-radius: 2px;
    margin: auto auto 0;
    cursor: pointer;
    transition: opacity 0.3s linear;
}

.auth__admit-button:hover{
    opacity: 0.8;
}

@media screen and (max-width: 620px){
    .auth__admit-button{
        padding: 0;
        font-size: 0.875rem;
        line-height: 1.059rem;
        margin-bottom: 1.563rem;
        margin-top: 1.013rem;
        height: 2.875rem;
    }
}

.auth__switch{
    text-align: center;
    width: calc(100% - 2.75rem);
    max-width: 22.375rem;
    justify-content: center;
    display: flex;
    flex-direction: column;
    margin: 0 auto;
    font-size: 0.875rem;
}

.auth__switch-text{
    margin-bottom: 0;
}

.auth__link-text{
    margin: 0.4rem auto;
}

.auth__switch-link{
    text-decoration: none;
    font-weight: bold;
    color: #000;
    cursor: pointer;
}

.form__checkbox-block{
    display: flex;
    flex-direction: row;
    justify-content: start;
    margin-bottom: 0.5rem;
}

.form__checkbox{
    margin-right: 0.7rem;
}

.form__checkbox-label{
    font-size: 0.875rem;
    font-weight: 400;
    line-height: 1.059rem;
}

/* CSS variables. */
:root {
    --PhoneInput-color--focus: #03b2cb;
    --PhoneInputInternationalIconPhone-opacity: 0.8;
    --PhoneInputInternationalIconGlobe-opacity: 0.65;
    --PhoneInputCountrySelect-marginRight: 0.35em;
    --PhoneInputCountrySelectArrow-width: 0.3em;
    --PhoneInputCountrySelectArrow-marginLeft: var(--PhoneInputCountrySelect-marginRight);
    --PhoneInputCountrySelectArrow-borderWidth: 1px;
    --PhoneInputCountrySelectArrow-opacity: 0.45;
    --PhoneInputCountrySelectArrow-color: currentColor;
    --PhoneInputCountrySelectArrow-color--focus: var(--PhoneInput-color--focus);
    --PhoneInputCountrySelectArrow-transform: rotate(45deg);
    --PhoneInputCountryFlag-aspectRatio: 1.5;
    --PhoneInputCountryFlag-height: 1em;
    --PhoneInputCountryFlag-borderWidth: 1px;
    --PhoneInputCountryFlag-borderColor: rgba(0,0,0,0.5);
    --PhoneInputCountryFlag-borderColor--focus: var(--PhoneInput-color--focus);
    --PhoneInputCountryFlag-backgroundColor--loading: rgba(0,0,0,0.1);
}

.PhoneInput {
    /* This is done to stretch the contents of this component. */
    display: flex;
    align-items: center;
    background-color: transparent;
}

.PhoneInputInput {
    /* The phone number input stretches to fill all empty space */
    flex: 1;
    /* The phone number input should shrink
       to make room for the extension input */
    min-width: 0;
    background-color: transparent;
    border: none;
}

.PhoneInputCountryIcon {
    width: calc(var(--PhoneInputCountryFlag-height) * var(--PhoneInputCountryFlag-aspectRatio));
    height: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--square {
    width: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--border {
    /* Removed `background-color` because when an `<img/>` was still loading
       it would show a dark gray rectangle. */
    /* For some reason the `<img/>` is not stretched to 100% width and height
       and sometime there can be seen white pixels of the background at top and bottom. */
    background-color: var(--PhoneInputCountryFlag-backgroundColor--loading);
    /* Border is added via `box-shadow` because `border` interferes with `width`/`height`. */
    /* For some reason the `<img/>` is not stretched to 100% width and height
       and sometime there can be seen white pixels of the background at top and bottom,
       so an additional "inset" border is added. */
    box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor),
    inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor);
}

.PhoneInputCountryIconImg {
    /* Fixes weird vertical space above the flag icon. */
    /* https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/7#note_348586559 */
    display: block;
    /* 3rd party <SVG/> flag icons won't stretch if they have `width` and `height`.
       Also, if an <SVG/> icon's aspect ratio was different, it wouldn't fit too. */
    width: 100%;
    height: 100%;
}

.PhoneInputInternationalIconPhone {
    opacity: var(--PhoneInputInternationalIconPhone-opacity);
}

.PhoneInputInternationalIconGlobe {
    opacity: var(--PhoneInputInternationalIconGlobe-opacity);
}

/* Styling native country `<select/>`. */

.PhoneInputCountry {
    position: relative;
    align-self: stretch;
    display: flex;
    align-items: center;
    margin-right: var(--PhoneInputCountrySelect-marginRight);
}

.PhoneInputCountrySelect {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: 1;
    border: 0;
    opacity: 0;
    cursor: pointer;
}

.PhoneInputCountrySelect[disabled],
.PhoneInputCountrySelect[readonly] {
    cursor: default;
}

.PhoneInputCountrySelectArrow {
    display: block;
    content: '';
    width: var(--PhoneInputCountrySelectArrow-width);
    height: var(--PhoneInputCountrySelectArrow-width);
    margin-left: var(--PhoneInputCountrySelectArrow-marginLeft);
    border-style: solid;
    border-color: var(--PhoneInputCountrySelectArrow-color);
    border-top-width: 0;
    border-bottom-width: var(--PhoneInputCountrySelectArrow-borderWidth);
    border-left-width: 0;
    border-right-width: var(--PhoneInputCountrySelectArrow-borderWidth);
    transform: var(--PhoneInputCountrySelectArrow-transform);
    opacity: var(--PhoneInputCountrySelectArrow-opacity);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon + .PhoneInputCountrySelectArrow {
    opacity: 1;
    color: var(--PhoneInputCountrySelectArrow-color--focus);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon--border {
    box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus),
    inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon .PhoneInputInternationalIconGlobe {
    opacity: 1;
    color: var(--PhoneInputCountrySelectArrow-color--focus);
}

